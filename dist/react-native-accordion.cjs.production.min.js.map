{"version":3,"file":"react-native-accordion.cjs.production.min.js","sources":["../src/Accordion.tsx"],"sourcesContent":["import React, {useEffect, useState, memo, ReactElement} from 'react';\nimport {\n  Text,\n  FlatList,\n  LayoutAnimation,\n  TouchableOpacity,\n  StyleSheet,\n  Animated,\n  Easing,\n  ImageStyle,\n  TextStyle,\n  ViewStyle\n} from 'react-native';\n// import {AccordionProps} from './types';\n\ninterface ItemInfo<ItemT> {\n  item: ReactElement<ItemT>;\n  index: number;\n}\n\ntype Item<ItemT> = (info: ItemInfo<ItemT>) => ReactElement | null;\ntype animationPreset = {\n  SPRING: 'spring';\n  EASEINEASEOUT: 'easeInEaseOut';\n  LINEAR: 'linear';\n};\n\n/**\n * @param displayedIconArrowDown Show to display icons arrowDown, default false. Not obligatory\n * @param containerStyle General style for display, not obligatory\n * @param items Array of elements to display\n * @param itemStyle Style for an array element, not obligatory\n * @param titleStyle Style for an title array element, not obligatory\n * @param isOpenFirstItem Boolean value is opening first item, default true. Not obligatory\n * @param styleIconArrowDown Style for icon, not obligatory\n * @param activeOpacity Click opacity, default 0.7. Not obligatory\n * @param typeAnimation Animation type for open item, default easeInEaseOut. Not obligatory\n * @param animatedContainerStyle style for animation container. Not obligatory\n * @param titleStyle style for item title. Not obligatory\n */\n\ninterface AccordionProps {\n  containerStyle?: ViewStyle;\n  isOpenFirstItem?: boolean;\n  items: Array<Item<ReactElement>>;\n  itemStyle?: ViewStyle;\n  displayedIconArrowDown?: boolean;\n  styleIconArrowDown?: ImageStyle;\n  activeOpacity?: number;\n  typeAnimation?: string | animationPreset;\n  animatedContainerStyle?: ViewStyle;\n  titleStyle?: TextStyle;\n}\n\nconst keyExtractor = (index: number) => index;\n\nconst Accordion = ({\n  displayedIconArrowDown,\n  containerStyle,\n  items,\n  itemStyle,\n  isOpenFirstItem,\n  styleIconArrowDown,\n  activeOpacity,\n  typeAnimation,\n  animatedContainerStyle,\n  titleStyle,\n}: AccordionProps) => {\n  const [currentIndex, setCurrentIndex] = useState<number | null>(null);\n  const configAnimation = () => {\n    return LayoutAnimation.configureNext(\n      // @ts-ignore\n      LayoutAnimation.Presets[typeAnimation],\n    );\n  };\n  const iconArrow = require('./icons/arrowdown.png');\n  const iconChangeValue = new Animated.Value(1);\n\n  const spin = iconChangeValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n  const iconChange = () => {\n    Animated.timing(iconChangeValue, {\n      toValue: 1,\n      duration: 2000,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  };\n  const onItemPress = (key: number) => {\n    iconChange();\n    setCurrentIndex(key === currentIndex ? null : key);\n    configAnimation();\n  };\n\n  useEffect(() => {\n    if (isOpenFirstItem) {\n      onItemPress(0);\n    }\n  }, [isOpenFirstItem]);\n\n  const renderItem = (data: any) => {\n    const {item, index} = data;\n    const key = keyExtractor(index);\n    return (\n      <>\n        <TouchableOpacity\n          onPress={() => onItemPress(key)}\n          activeOpacity={activeOpacity}\n          key={key}\n          style={[\n            itemStyle,\n            styles.itemStyle,\n            displayedIconArrowDown && styles.isEnableIcon,\n          ]}>\n          {item?.title && (\n            <Text style={titleStyle}>{item.title}</Text>\n          )}\n          {displayedIconArrowDown && (\n            <Animated.Image\n              source={iconArrow}\n              style={[\n                key === currentIndex && {transform: [{rotate: spin}]},\n                styleIconArrowDown,\n                styles.styleIconArrowDown,\n              ]}\n            />\n          )}\n        </TouchableOpacity>\n        {item.content && (\n          <Animated.View style={(styles.animatedBody, animatedContainerStyle)}>\n            {key === currentIndex && item?.content}\n          </Animated.View>\n        )}\n      </>\n    );\n  };\n  return (\n    <FlatList\n      data={items}\n      style={containerStyle && styles.container}\n      renderItem={renderItem}\n      keyExtractor={item => item.toString()}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  itemStyle: {\n    paddingHorizontal: 14,\n    borderTopWidth: 0.5,\n    paddingVertical: 8,\n  },\n  animatedBody: {\n    padding: 8,\n  },\n  isEnableIcon: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  styleIconArrowDown: {\n    height: 18,\n    width: 18,\n  },\n});\nexport default memo(Accordion);\n"],"names":["Accordion","_ref","displayedIconArrowDown","containerStyle","items","itemStyle","isOpenFirstItem","styleIconArrowDown","activeOpacity","typeAnimation","animatedContainerStyle","titleStyle","_useState","useState","currentIndex","setCurrentIndex","iconArrow","require","iconChangeValue","Animated","Value","spin","interpolate","inputRange","outputRange","onItemPress","key","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","LayoutAnimation","configureNext","Presets","useEffect","React","FlatList","data","style","styles","container","renderItem","item","index","TouchableOpacity","onPress","isEnableIcon","title","Text","Image","source","transform","rotate","content","View","keyExtractor","toString","StyleSheet","create","flex","paddingHorizontal","borderTopWidth","paddingVertical","animatedBody","padding","flexDirection","justifyContent","height","width","memo"],"mappings":"8KAwDMA,EAAY,SAAHC,OACbC,EAAsBD,EAAtBC,uBACAC,EAAcF,EAAdE,eACAC,EAAKH,EAALG,MACAC,EAASJ,EAATI,UACAC,EAAeL,EAAfK,gBACAC,EAAkBN,EAAlBM,mBACAC,EAAaP,EAAbO,cACAC,EAAaR,EAAbQ,cACAC,EAAsBT,EAAtBS,uBACAC,EAAUV,EAAVU,WAEAC,EAAwCC,WAAwB,MAAzDC,EAAYF,KAAEG,EAAeH,KAO9BI,EAAYC,QAAQ,yBACpBC,EAAkB,IAAIC,WAASC,MAAM,GAErCC,EAAOH,EAAgBI,YAAY,CACvCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,OAAQ,YAUlBC,EAAc,SAACC,GAPnBP,WAASQ,OAAOT,EAAiB,CAC/BU,QAAS,EACTC,SAAU,IACVC,OAAQC,SAAOC,OACfC,iBAAiB,IAChBC,QAIHnB,EAAgBW,IAAQZ,EAAe,KAAOY,GAtBvCS,kBAAgBC,cAErBD,kBAAgBE,QAAQ5B,KAkE5B,OA1CA6B,aAAU,WACJhC,GACFmB,EAAY,KAEb,CAACnB,IAuCFiC,gBAACC,YACCC,KAAMrC,EACNsC,MAAOvC,GAAkBwC,EAAOC,UAChCC,WAxCe,SAACJ,GAClB,IAAOK,EAAeL,EAAfK,KACDpB,EADgBe,EAATM,MAEb,OACER,gCACEA,gBAACS,oBACCC,QAAS,WAAA,OAAMxB,EAAYC,IAC3BlB,cAAeA,EACfkB,IAAKA,EACLgB,MAAO,CACLrC,EACAsC,EAAOtC,UACPH,GAA0ByC,EAAOO,sBAElCJ,SAAAA,EAAMK,QACLZ,gBAACa,QAAKV,MAAO/B,GAAamC,EAAKK,OAEhCjD,GACCqC,gBAACpB,WAASkC,OACRC,OAAQtC,EACR0B,MAAO,CACLhB,IAAQZ,GAAgB,CAACyC,UAAW,CAAC,CAACC,OAAQnC,KAC9Cd,EACAoC,EAAOpC,uBAKduC,EAAKW,SACJlB,gBAACpB,WAASuC,MAAKhB,SACZhB,IAAQZ,UAAgBgC,SAAAA,EAAMW,YAWrCE,aAAc,SAAAb,GAAI,OAAIA,EAAKc,eAK3BjB,EAASkB,aAAWC,OAAO,CAC/BlB,UAAW,CACTmB,KAAM,GAER1D,UAAW,CACT2D,kBAAmB,GACnBC,eAAgB,GAChBC,gBAAiB,GAEnBC,aAAc,CACZC,QAAS,GAEXlB,aAAc,CACZmB,cAAe,MACfC,eAAgB,iBAElB/D,mBAAoB,CAClBgE,OAAQ,GACRC,MAAO,sBAGIC,OAAKzE"}